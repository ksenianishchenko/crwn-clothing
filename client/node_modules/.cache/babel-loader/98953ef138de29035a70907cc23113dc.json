{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\udemy-react-projects\\\\Crwn-clothing\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess } from './user.actions';\nexport function* getAuthUserSnapshot(user, ...additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignIn() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getAuthUserSnapshot(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onEmailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getAuthUserSnapshot(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getAuthUserSnapshot(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onUserSignOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* onSignUpUser({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield getAuthUserSnapshot(user, {\n      displayName\n    });\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* googleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, onGoogleSignIn);\n}\nexport function* emailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, onEmailSignIn);\n}\nexport function* checkUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOutUserStart() {\n  yield takeLatest(userTypes.SIGN_OUT_START, onUserSignOut);\n}\nexport function* signUpStart() {\n  yield takeLatest(userTypes.SIGN_UP_START, onSignUpUser);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart), call(checkUserSession), call(signOutUserStart), call(signUpStart)]);\n}","map":{"version":3,"sources":["D:\\Projects\\udemy-react-projects\\Crwn-clothing\\crwn-clothing\\src\\redux\\user\\user-sagas.js"],"names":["takeLatest","put","all","call","userTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","getAuthUserSnapshot","user","additionalData","userRef","snapshot","get","id","data","error","message","onGoogleSignIn","signInWithPopup","onEmailSignIn","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","userAuth","onUserSignOut","signOut","onSignUpUser","displayName","createUserWithEmailAndPassword","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","EMAIL_SIGN_IN_START","checkUserSession","CHECK_USER_SESSION","signOutUserStart","SIGN_OUT_START","signUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\n\r\nimport userTypes from './user.types';\r\nimport {googleProvider, auth, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\r\nimport {signInFailure, signInSuccess, signOutFailure, signOutSuccess} from './user.actions';\r\n\r\nexport function* getAuthUserSnapshot(user, ...additionalData) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const snapshot = yield userRef.get();\r\n    yield put(signInSuccess({id: snapshot.id, ...snapshot.data()}))\r\n  } catch(error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignIn() {\r\n  try {\r\n    const {user} = yield auth.signInWithPopup(googleProvider);\r\n    yield getAuthUserSnapshot(user);\r\n  } catch(error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignIn({payload: {email, password}}) {\r\n  try {\r\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getAuthUserSnapshot(user);\r\n  } catch(error) {\r\n    yield put(signInFailure(error.message))\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if(!userAuth) return;\r\n    yield getAuthUserSnapshot(userAuth);\r\n  } catch(error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onUserSignOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  }catch(error) {\r\n    yield put(signOutFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onSignUpUser({payload: {email, password, displayName}}) {\r\n  try{\r\n    const {user} = yield auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    yield getAuthUserSnapshot(user, {displayName});\r\n\r\n  } catch(error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* googleSignInStart() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, onGoogleSignIn);\r\n}\r\n\r\nexport function* emailSignInStart() {\r\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, onEmailSignIn);\r\n}\r\n\r\nexport function* checkUserSession() {\r\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* signOutUserStart() {\r\n  yield takeLatest(userTypes.SIGN_OUT_START, onUserSignOut)\r\n}\r\n\r\nexport function* signUpStart() {\r\n  yield takeLatest(userTypes.SIGN_UP_START, onSignUpUser);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(googleSignInStart),\r\n    call(emailSignInStart),\r\n    call(checkUserSession),\r\n    call(signOutUserStart),\r\n    call(signUpStart)\r\n  ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}