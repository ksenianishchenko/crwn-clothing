{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\udemy-react-projects\\\\Crwn-clothing\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess } from './user.actions';\nexport function* getAuthUserSnapshot(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapshot = yield userRef.get();\n    put(signInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data())));\n  } catch (error) {\n    put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignIn() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    getAuthUserSnapshot(user);\n  } catch (error) {\n    put(signInFailure(error.message));\n  }\n}\nexport function* onEmailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    getAuthUserSnapshot(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* googleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, onGoogleSignIn);\n}\nexport function* emailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, onEmailSignIn);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart)]);\n}","map":{"version":3,"sources":["D:\\Projects\\udemy-react-projects\\Crwn-clothing\\crwn-clothing\\src\\redux\\user\\user-sagas.js"],"names":["takeLatest","put","all","call","userTypes","googleProvider","auth","createUserProfileDocument","signInFailure","signInSuccess","getAuthUserSnapshot","user","userRef","snapshot","get","id","data","error","message","onGoogleSignIn","signInWithPopup","onEmailSignIn","payload","email","password","signInWithEmailAndPassword","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,cAAR,EAAwBC,IAAxB,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AAEA,OAAO,UAAUC,mBAAV,CAA8BC,IAA9B,EAAoC;AACzC,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACAb,IAAAA,GAAG,CAACQ,aAAa;AAAEM,MAAAA,EAAE,EAAEF,QAAQ,CAACE;AAAf,OAAsBF,QAAQ,CAACG,IAAT,EAAtB,EAAd,CAAH;AACD,GAJD,CAIE,OAAMC,KAAN,EAAa;AACbhB,IAAAA,GAAG,CAACO,aAAa,CAACS,KAAK,CAACC,OAAP,CAAd,CAAH;AACD;AACF;AAED,OAAO,UAAUC,cAAV,GAA2B;AAChC,MAAI;AAAA,iBACa,MAAMb,IAAI,CAACc,eAAL,CAAqBf,cAArB,CADnB;AAAA,UACKM,IADL,QACKA,IADL;;AAEFD,IAAAA,mBAAmB,CAACC,IAAD,CAAnB;AACD,GAHD,CAGE,OAAMM,KAAN,EAAa;AACbhB,IAAAA,GAAG,CAACO,aAAa,CAACS,KAAK,CAACC,OAAP,CAAd,CAAH;AACD;AACF;AAED,OAAO,UAAUG,aAAV,CAAwB;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAAxB,EAAsD;AAC3D,MAAI;AAAA,kBACa,MAAMlB,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADnB;AAAA,UACKb,IADL,SACKA,IADL;;AAEFD,IAAAA,mBAAmB,CAACC,IAAD,CAAnB;AACD,GAHD,CAGE,OAAMM,KAAN,EAAa;AACb,UAAMhB,GAAG,CAACO,aAAa,CAACS,KAAK,CAACC,OAAP,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,iBAAV,GAA8B;AACnC,QAAM1B,UAAU,CAACI,SAAS,CAACuB,oBAAX,EAAiCR,cAAjC,CAAhB;AACD;AAED,OAAO,UAAUS,gBAAV,GAA6B;AAClC,QAAM5B,UAAU,CAACI,SAAS,CAACyB,mBAAX,EAAgCR,aAAhC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,iBAAD,CAAL,EAA0BvB,IAAI,CAACyB,gBAAD,CAA9B,CAAD,CAAT;AACD","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\n\r\nimport userTypes from './user.types';\r\nimport {googleProvider, auth, createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport {signInFailure, signInSuccess} from './user.actions';\r\n\r\nexport function* getAuthUserSnapshot(user) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const snapshot = yield userRef.get();\r\n    put(signInSuccess({id: snapshot.id, ...snapshot.data()}))\r\n  } catch(error) {\r\n    put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignIn() {\r\n  try {\r\n    const {user} = yield auth.signInWithPopup(googleProvider);\r\n    getAuthUserSnapshot(user);\r\n  } catch(error) {\r\n    put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignIn({payload: {email, password}}) {\r\n  try {\r\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n    getAuthUserSnapshot(user);\r\n  } catch(error) {\r\n    yield put(signInFailure(error.message))\r\n  }\r\n}\r\n\r\nexport function* googleSignInStart() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, onGoogleSignIn)\r\n}\r\n\r\nexport function* emailSignInStart() {\r\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, onEmailSignIn)\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(googleSignInStart), call(emailSignInStart)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}