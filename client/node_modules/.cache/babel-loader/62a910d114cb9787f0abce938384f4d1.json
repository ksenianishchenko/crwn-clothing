{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\udemy-react-projects\\\\Crwn-clothing\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { cartReducerTypes } from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.util\";\nconst initialState = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case cartReducerTypes.TOOGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case cartReducerTypes.ADD_CART:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case cartReducerTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case cartReducerTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:\\Projects\\udemy-react-projects\\Crwn-clothing\\crwn-clothing\\src\\redux\\cart\\cart.js"],"names":["cartReducerTypes","addItemToCart","removeItemFromCart","initialState","hidden","cartItems","cartReducer","state","action","type","TOOGLE_CART_HIDDEN","ADD_CART","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM"],"mappings":";AAAA,SAAQA,gBAAR,QAA+B,cAA/B;AACA,SAAQC,aAAR,EAAuBC,kBAAvB,QAAgD,aAAhD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,gBAAgB,CAACU,kBAAtB;AACE,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKJ,gBAAgB,CAACW,QAAtB;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAKZ,gBAAgB,CAACa,oBAAtB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAuBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EAAlE;AAFb;;AAIF,SAAKhB,gBAAgB,CAACiB,WAAtB;AACE,+BACKV,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF/B;;AAIF;AACE,aAAOL,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import {cartReducerTypes} from \"./cart.types\";\r\nimport {addItemToCart, removeItemFromCart} from \"./cart.util\";\r\n\r\nconst initialState = {\r\n  hidden: true,\r\n  cartItems: []\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case cartReducerTypes.TOOGLE_CART_HIDDEN:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden\r\n      }\r\n    case cartReducerTypes.ADD_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload)\r\n      }\r\n    case cartReducerTypes.CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\r\n      }\r\n    case cartReducerTypes.REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}