{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\udemy-react-projects\\\\Crwn-clothing\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection';\nimport { selectIsCollectionLoading } from '../../redux/shop/shop.selectors';\nimport { fetchCollectionAsinc } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    const fetchCollections = this.props.fetchCollections;\n    fetchCollections();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoading = _this$props.isCollectionsLoading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), \"} />\", React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => createStructuredSelector({\n  isCollectionsLoading: selectIsCollectionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollections: () => dispatch(fetchCollectionAsinc())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["D:\\Projects\\udemy-react-projects\\Crwn-clothing\\crwn-clothing\\src\\pages\\shop\\shop.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionOverviewContainer","CollectionPage","selectIsCollectionLoading","fetchCollectionAsinc","WithSpinner","CollectionPageWithSpinner","Shop","Component","componentDidMount","fetchCollections","props","render","match","isCollectionsLoading","path","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,2BAAP,MAAwC,sEAAxC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,yBAAR,QAAwC,iCAAxC;AACA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMK,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAEjCC,EAAAA,iBAAiB,GAAG;AAAA,UACXC,gBADW,GACS,KAAKC,KADd,CACXD,gBADW;AAElBA,IAAAA,gBAAgB;AACjB;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKD,KADpC;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,oBADP,eACOA,oBADP;AAEP,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEd,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,UAEL,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKY,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAEJ,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACG;AAAvC,SAAiEH,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAID;;AAbgC;;AAgBnC,MAAMK,eAAe,GAAGC,KAAK,IAAIjB,wBAAwB,CAAC;AACxDc,EAAAA,oBAAoB,EAAEX;AADkC,CAAD,CAAzD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,gBAAgB,EAAE,MAChBS,QAAQ,CAACf,oBAAoB,EAArB;AAF4B,CAAL,CAAnC;;AAMA,eAAeL,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,IAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport CollectionOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPage from '../collection/collection';\r\nimport {selectIsCollectionLoading} from '../../redux/shop/shop.selectors';\r\nimport {fetchCollectionAsinc} from '../../redux/shop/shop.actions';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner';\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass Shop extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const {fetchCollections} = this.props;\r\n    fetchCollections();\r\n  }\r\n\r\n  render() {\r\n    const {match, isCollectionsLoading} = this.props;\r\n    return <div className='shop-page'>\r\n      <Route exact path={`${match.path}`} component={CollectionOverviewContainer}/>} />\r\n      <Route path={`${match.path}/:collectionId`} render={props => <CollectionPageWithSpinner isLoading={!isCollectionsLoading} {...props} />} />\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => createStructuredSelector({\r\n  isCollectionsLoading: selectIsCollectionLoading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollections: () => (\r\n    dispatch(fetchCollectionAsinc())\r\n  )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\r\n"]},"metadata":{},"sourceType":"module"}