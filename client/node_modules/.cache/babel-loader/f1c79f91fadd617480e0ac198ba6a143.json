{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\udemy-react-projects\\\\Crwn-clothing\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { auth } from '../../firebase/firebase.utils';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.createUserWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const googleSignInStarts = this.props.googleSignInStarts;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ButtonsBarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStarts,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStarts: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:\\Projects\\udemy-react-projects\\Crwn-clothing\\crwn-clothing\\src\\components\\sign-in\\sign-in.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","auth","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","createUserWithEmailAndPassword","setState","error","console","handleChange","target","value","name","render","googleSignInStarts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input';\r\nimport CustomButton from '../custom-button/custom-button';\r\nimport {googleSignInStart} from '../../redux/user/user.actions';\r\n\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  ButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nimport {auth} from '../../firebase/firebase.utils';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: ``,\r\n      password: ``\r\n    }\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    const {email, password} = this.state;\r\n\r\n    try {\r\n      await auth.createUserWithEmailAndPassword(email, password);\r\n      this.setState({ email: '', password: '' });\r\n    } catch(error) {\r\n      console.error(error);\r\n    }\r\n\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const {googleSignInStarts} = this.props;\r\n    return <SignInContainer>\r\n      <SignInTitle>I already have an account</SignInTitle>\r\n      <span>Sign in with your email and password</span>\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          value={this.state.email}\r\n          handleChange={this.handleChange}\r\n          label={`email`}\r\n          required\r\n        />\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={this.state.password}\r\n          handleChange={this.handleChange}\r\n          label={`password`}\r\n          required\r\n        />\r\n        <ButtonsBarContainer>\r\n          <CustomButton type='submit'>Sign In</CustomButton>\r\n          <CustomButton type='button' onClick={googleSignInStarts} isGoogleSignIn>Sign In With Google</CustomButton>\r\n        </ButtonsBarContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStarts: () => dispatch(googleSignInStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}