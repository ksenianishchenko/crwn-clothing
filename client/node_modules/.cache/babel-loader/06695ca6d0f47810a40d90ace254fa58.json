{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionStart, fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionAsinc() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionStarts() {\n  yield takeEvery(put(fetchCollectionStart()), fetchCollectionAsinc);\n}","map":{"version":3,"sources":["D:\\Projects\\udemy-react-projects\\Crwn-clothing\\crwn-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","put","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionAsinc","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStarts"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,oBAAR,EAA8BC,sBAA9B,EAAsDC,sBAAtD,QAAmF,gBAAnF;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMX,IAAI,CAACE,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACK,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAMC,KAAN,EAAa;AACb,UAAMb,GAAG,CAACM,sBAAsB,CAACO,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CAACC,GAAG,CAACI,oBAAoB,EAArB,CAAJ,EAA8BG,oBAA9B,CAAf;AACD","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport {fetchCollectionStart, fetchCollectionSuccess, fetchCollectionFailure} from './shop.actions';\r\n\r\nexport function* fetchCollectionAsinc() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n    yield put(fetchCollectionSuccess(collectionsMap))\r\n  } catch(error) {\r\n    yield put(fetchCollectionFailure(error.message))\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionStarts() {\r\n  yield takeEvery(put(fetchCollectionStart()), fetchCollectionAsinc);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}